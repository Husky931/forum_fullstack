

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]

jobs:
  build_backend:
    name: build_backend
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./forum-backend

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: create env file
      run: |
              touch .env
              echo HOST=${{ secrets.HOST }} >> .env
              echo PORT=${{ secrets.PORT }} >> .env
              echo APP_KEYS=${{ secrets.APP_KEYS }} >> .env
              echo API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} >> .env
              echo ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} >> .env
              echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
              echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
              echo AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }} >> .env
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with: 
        filters: |
          forum-backend:
            - 'forum-backend/**'
    - run: pwd
    - name: Use Node.js ${{ matrix.node-version }}
      if: steps.filter.outputs.forum-backend == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: /home/ubuntu/actions-runner/_work/forum_fullstack/forum_fullstack/forum-backend/yarn.lock
    - name: install deps
      if: steps.filter.outputs.forum-backend == 'true'
      run: yarn install --frozen-lockfile
    - name: build app
      if: steps.filter.outputs.forum-backend == 'true'
      run: NODE_ENV=production yarn build
    - name: turn on app
      if: steps.filter.outputs.forum-backend == 'true'
      run: HOST=${{ secrets.HOST }} PORT=${{ secrets.PORT }} APP_KEYS=${{ secrets.APP_KEYS }} API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }} ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }} JWT_SECRET=${{ secrets.JWT_SECRET }} AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }} export NODE_ENV=production&&pm2 start yarn --name "backend" -- start
    
  build_frontend:
    name: build_frontend
    needs: build_backend
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with: 
        filters: |
          frontend:
            - 'frontend/**'
    - name: Use Node.js ${{ matrix.node-version }}
      if: steps.filter.outputs.frontend == 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        cache-dependency-path: /home/ubuntu/actions-runner/_work/forum_fullstack/forum_fullstack/frontend/package.json
    - name: install deps
      if: steps.filter.outputs.frontend == 'true'
      run: cd /home/ubuntu/actions-runner/_work/forum_fullstack/forum_fullstack/frontend && yarn install
    - name: build app
      if: steps.filter.outputs.frontend == 'true'
      run: cd /home/ubuntu/actions-runner/_work/forum_fullstack/forum_fullstack/frontend && yarn build
    - name: start app
      if: steps.filter.outputs.frontend == 'true'
      run: cd /home/ubuntu/actions-runner/_work/forum_fullstack/forum_fullstack/frontend && pm2 start yarn --name "frontend" -- start
    
